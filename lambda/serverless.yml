service: ChurchAppAPI

custom: ${file(config/config_dev.yml)}

provider:
  name: aws
  runtime: nodejs12.x

  stage: dev
  region: us-east-1

package:
  individually: true
  exclude:
    - config/**
    - EventCreate/**
    - EventReadAll/**
    - EventRoleCreate/**
    - UserCreate/**
    - UserLogin/**
    - UserRead/**

functions:
  EventCreate:
    handler: EventCreate/index.handler
    timeout: 1
    memorySize: 128
    package:
      include:
        - EventCreate/index.js
    layers:
      - arn:aws:lambda:us-east-1:935952531494:layer:node-pg:3
    events:
      - http:
          path: /event/create
          method: post
    environment:
      PGDATABASE: ${self:custom.PGDATABASE}
      PGHOST: ${self:custom.PGHOST}
      PGPASSWORD: ${self:custom.PGPASSWORD}
      PGPORT: ${self:custom.PGPORT}
      PGUSER: ${self:custom.PGUSER}

  EventReadAll:
    handler: EventReadAll/index.handler
    timeout: 1
    memorySize: 128
    package:
      include:
        - EventReadAll/index.js
    layers:
      - arn:aws:lambda:us-east-1:935952531494:layer:node-pg:3
    events:
      - http:
          path: /event/readall
          method: get
    environment:
      PGDATABASE: ${self:custom.PGDATABASE}
      PGHOST: ${self:custom.PGHOST}
      PGPASSWORD: ${self:custom.PGPASSWORD}
      PGPORT: ${self:custom.PGPORT}
      PGUSER: ${self:custom.PGUSER}

  EventRoleCreate:
    handler: EventRoleCreate/index.handler
    timeout: 1
    memorySize: 128
    package:
      include:
        - EventRoleCreate/index.js
    layers:
      - arn:aws:lambda:us-east-1:935952531494:layer:node-pg:3
    events:
      - http:
          path: /event/role/create
          method: post
    environment:
      PGDATABASE: ${self:custom.PGDATABASE}
      PGHOST: ${self:custom.PGHOST}
      PGPASSWORD: ${self:custom.PGPASSWORD}
      PGPORT: ${self:custom.PGPORT}
      PGUSER: ${self:custom.PGUSER}

  EventRoleReadAll:
    handler: EventRoleReadAll/index.handler
    timeout: 1
    memorySize: 128
    package:
      include:
        - EventRoleReadAll/index.js
    layers:
      - arn:aws:lambda:us-east-1:935952531494:layer:node-pg:3
    events:
      - http:
          path: /event/role/read/{eventID}
          method: get
          request:
            parameters:
              paths:
                eventID: true
    environment:
      PGDATABASE: ${self:custom.PGDATABASE}
      PGHOST: ${self:custom.PGHOST}
      PGPASSWORD: ${self:custom.PGPASSWORD}
      PGPORT: ${self:custom.PGPORT}
      PGUSER: ${self:custom.PGUSER}

  UserCreate:
    handler: UserCreate/index.handler
    timeout: 1
    memorySize: 128
    package:
      include:
        - UserCreate/index.js
    layers:
      - arn:aws:lambda:us-east-1:935952531494:layer:node-pg:3
    events:
      - http:
          path: /user/create
          method: post
    environment:
      PGDATABASE: ${self:custom.PGDATABASE}
      PGHOST: ${self:custom.PGHOST}
      PGPASSWORD: ${self:custom.PGPASSWORD}
      PGPORT: ${self:custom.PGPORT}
      PGUSER: ${self:custom.PGUSER}

  UserRead:
    handler: UserRead/index.handler
    timeout: 1
    memorySize: 128
    package:
      include:
        - UserRead/index.js
    layers:
      - arn:aws:lambda:us-east-1:935952531494:layer:node-pg:3
    events:
      - http:
          path: /user/read/{username}
          method: get
          request:
            parameters:
              paths:
                username: true
    environment:
      PGDATABASE: ${self:custom.PGDATABASE}
      PGHOST: ${self:custom.PGHOST}
      PGPASSWORD: ${self:custom.PGPASSWORD}
      PGPORT: ${self:custom.PGPORT}
      PGUSER: ${self:custom.PGUSER}

  UserLogin:
    handler: UserLogin/index.handler
    timeout: 1
    memorySize: 128
    package:
      include:
        - UserLogin/index.js
    layers:
      - arn:aws:lambda:us-east-1:935952531494:layer:node-pg:3
    events:
      - http:
          path: /user/login
          method: post
    environment:
      PGDATABASE: ${self:custom.PGDATABASE}
      PGHOST: ${self:custom.PGHOST}
      PGPASSWORD: ${self:custom.PGPASSWORD}
      PGPORT: ${self:custom.PGPORT}
      PGUSER: ${self:custom.PGUSER}
